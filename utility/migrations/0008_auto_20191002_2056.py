# Generated by Django 2.2 on 2019-10-03 01:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0002_auto_20190808_1057'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('utility', '0007_auto_20190821_0929'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_number', models.CharField(help_text='Unique Job ID Number', max_length=32, unique=True)),
                ('job_type', models.CharField(choices=[('full-time', 'Full time'), ('part-time', 'Part-time'), ('contract', 'Contract'), ('leave', 'Leave')], help_text='Job type', max_length=32)),
                ('department', models.CharField(choices=[('operations', 'Operations'), ('pump_ops', 'Pump Ops'), ('centrifuge', 'Centrifuge'), ('chemistry_lab', 'Chemistry/Lab')], help_text='Department', max_length=32)),
                ('start_date', models.DateField(help_text='Job start date')),
                ('closing_date', models.DateField(blank=True, help_text='Closing date. You can set null for Continuous.', null=True)),
                ('salary', models.FloatField(help_text='Technician salary in hourly rate', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('description', models.TextField(blank=True, help_text='Description', null=True)),
                ('purpose', models.TextField(blank=True, help_text='Purpose of this allocation', null=True)),
                ('alert', models.OneToOneField(help_text='An alert this job is supposed to fix', on_delete=django.db.models.deletion.CASCADE, to='utility.Alert')),
            ],
        ),
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hourly_rate', models.FloatField(help_text="Hourly rate to calculate the technician's salary", validators=[django.core.validators.MinValueValidator(0.0)])),
                ('preferred_job_type', models.CharField(choices=[('full-time', 'Full time'), ('part-time', 'Part-time'), ('contract', 'Contract'), ('leave', 'Leave')], help_text='Preferred Job type', max_length=32)),
                ('current_job', models.OneToOneField(blank=True, help_text='Current job assigned to this technician', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_assignee', to='utility.ResourceAllocation')),
                ('user', models.OneToOneField(help_text='User', on_delete=django.db.models.deletion.CASCADE, related_name='technician', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceAllocationCalendar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Job calendar date')),
                ('allocation', models.ForeignKey(help_text='Resource allocation', on_delete=django.db.models.deletion.CASCADE, related_name='calendar', to='utility.ResourceAllocation')),
            ],
            options={
                'verbose_name_plural': 'Resource allocation calendar',
            },
        ),
        migrations.AddField(
            model_name='resourceallocation',
            name='assignee',
            field=models.ForeignKey(help_text='A technician assigned to fix alert', on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='utility.Technician'),
        ),
        migrations.AddField(
            model_name='resourceallocation',
            name='location',
            field=models.OneToOneField(help_text='Location / Address', on_delete=django.db.models.deletion.CASCADE, to='geo.Address'),
        ),
    ]
